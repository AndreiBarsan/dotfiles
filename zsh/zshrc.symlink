# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/workspace

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Setup oh-my-zsh
export ZSH="$HOME/.oh-my-zsh"
plugins=(git osx zsh-syntax-highlighting svn brew)
ZSH_THEME="gnzh"
source "$ZSH/oh-my-zsh.sh"

# Huge command history: the interaction between these two size limits is a little funny, but these should get you pretty far
SAVEHIST=50000
HISTSIZE=50000

# Tweak: disable ctrl-d to prevent accidental logouts
setopt IGNORE_EOF

# Tweak: make sure to treat dots and slashes as word delimiters
WORDCHARS='*?_-[]~=&;!#$%^(){}<>'
bindkey -e

# Tweak: properly handle ctrl-left and ctrl-right (depends on your terminal settings)
#bindkey '^[[1;5C' forward-word
#bindkey '^[[1;5D' backward-word

# Proper character encoding (change en_US as needed to your locale)
export LC_CTYPE=en_US.UTF-8

# Fuck-powered autocorrect
alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'
alias fuck!=fuck
alias Fuck=fuck
alias Fuck!=fuck

# Additional config parameters
if [[ -e ~/.local.bash ]]; then
  source ~/.local.bash
fi

# Job-specific stuff that shouldn't be subject to source control.
if [[ -e ~/.zshrc.job ]]; then
  source ~/.zshrc.job
fi

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# [OSX] iTerm2 integration (e.g. automatic theme switching depending on ssh
# host and other magic stuff).
test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh

# Python Anaconda support
export PATH=~/anaconda3/bin:"$PATH"

# Support modules (e.g. to do matlab command line interop)
source /usr/local/opt/modules/Modules/init/zsh
# Launch Matlab from the command line.
export PATH="$PATH:/Applications/MATLAB_R2015a.app/bin"

# This adds command-line support for the Torch scientific computing framework.
. /Users/andrei/torch/install/bin/torch-activate

# Add support for stuff installed to '~/bin', such as Bazel.
export PATH="$PATH:$HOME/bin"

# Allow Jupyter to easily find matlab.
export MATLAB_EXECUTABLE=/Applications/MATLAB_R2015a.app/bin/matlab


. /Users/andrei/torch-cl/install/bin/torch-activate

# The next line updates PATH for the Google Cloud SDK.
if [ -f /Users/andrei/workspace/google-cloud-sdk/path.zsh.inc ]; then
  source '/Users/andrei/workspace/google-cloud-sdk/path.zsh.inc'
fi

# The next line enables shell command completion for gcloud.
if [ -f /Users/andrei/workspace/google-cloud-sdk/completion.zsh.inc ]; then
  source '/Users/andrei/workspace/google-cloud-sdk/completion.zsh.inc'
fi

# These lines add support for the Muse headband developer kit.
export PATH="$PATH:/Applications/Muse"
export DYLD_FALLBACK_LIBRARY_PATH="$DYLD_FALLBACK_LIBRARY_PATH:/Applications/Muse"
