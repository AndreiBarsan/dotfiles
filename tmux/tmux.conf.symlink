# Use C-a as a prefix (shadows emacs-style C-a, C-e navigation, but it's still
# better than using a weird leader like C-g)
set -g prefix C-a
# C-a C-a is the new emacs-style home, i.e., C-a.
bind C-a send-prefix
unbind C-b

set -sg escape-time 1

# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "xterm-256color"


# Watch for activity in background windows
setw -g monitor-activity on
set -g visual-activity on

# Allow custom window [C-a ,] names to stick.
set-option -g allow-rename off

# scrollback size
set -g history-limit 100000

# Some pre-powerline statusbar customization, for system where it isn't available.
set -g status-bg blue
set -g status-fg white
set -g status-left-length 100

# Powerline support! (variable defined in zshrc for portability)
run-shell "powerline-daemon -q"
source "$TMUX_POWERLINE_CONF"

set-option -g default-shell /bin/zsh
set -g mode-keys vi

# TODO(andrei): Should remove this if not needed.
# Active/inactive pane coloring and sane mouse controls. Requires tmux 2.1.
#if-shell "if [[ `tmux -V | cut -d' ' -f2` -gt 2.0 ]]; then true; else false; fi" \
#'set -g window-style "fg=colour247,bg=colour232"; set -g window-active-style "fg=colour255,bg=black"; set -g mouse'
#if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]; then true; else false; fi" \
    #'set -g mouse on; set -g mouse-utf8 on'

# Get mouse support right.
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES]
# Snippet source: http://stackoverflow.com/a/40902312/1055295
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
      set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
 "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
 "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"


# TODO(andrei): Hostname-based coloring of panes in a cross-platform manner,
# better than the iterm stuff. Should be doable based on that one guy's example
# after the news about the company which deleted all its shit by accidentally
# running test scripts in production.

###########################################################################
# Window management / navigation
###########################################################################

# C-\ (no prefix) to skip to last window we were in before this one
bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer

# TODO(andrei): Clean up this crap if no longer needed thanks to plugins.
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# Linux-specific copying
#bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Mac-specific copying
#bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"


# TODO(andreib): Remove commands which are commented out and supported by the
# `tmux-pain-control` plugin,
# Easy-to-remember split pane commands which open in the same folder!
# bind | split-window -h -c "#{pane_current_path}"
# bind - split-window -v -c "#{pane_current_path}"

unbind '"'
unbind %

# moving between panes with vim movement keys
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
# bind -r H resize-pane -L 5
# bind -r J resize-pane -D 5
# bind -r K resize-pane -U 5
# bind -r L resize-pane -R 5

# Make sure our active pane borders are fat and easy to see.
set -g pane-border-fg white
set -g pane-active-border-bg colour190
set -g pane-active-border-fg colour190

# TODO(andrei): Add the tpm setup to your bootstrap script.
# Plugin setup using tpm: https://github.com/tmux-plugins/tpm
# Commands:
#  [prefix] I     = install new plugins
#  [prefix] U     = update plugins
#  [prefix] alt+U = uninstall plugins not on the list

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Persists sessions across restarts: [prefix] C-s = save, C-r = restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-continuum goes one step further and does this continuously, seamlessly.
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

# Sane copying and pasting
# Linux: recommended to have xsel installed.
set -g @shell_mode 'vi'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (this line MUST ALWAYS be at the very bottom
# of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
