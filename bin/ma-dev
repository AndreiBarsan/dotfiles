#!/usr/bin/env bash
# Start a development session using Michelangelo.
#
# Allocates a temporary devbox, waits for it to spawn, and then sets up
# codesync. Pro-tip: you can use more than one devbox at a time. (But please
# try not to hog resources unnecessarily!)
#
# Requirements:
#   - 'AV' environment variable pointing to the root of the rAV repository.
#   - Michelangelo tool (ma) set up for internal use.

set -euo pipefail

# Define the script's parameters
DEVBOX_TTL_H=12
NUM_GPUS=4

# Start to do the work
DEVBOX_TTL_S=$((DEVBOX_TTL_H * 3600))
echo "Starting ${DEVBOX_TTL_H}-hour development session... ($DEVBOX_TTL_S sec)"

time "$AV/bin/yyz_docker_build"
echo "Docker image rebuilt OK."

time "$AV/bin/ma" train tf docker                  \
	--zone irn-prod-gpus --respool /Research    \
	--num-gpus "$NUM_GPUS"                      \
	--custom-docker $(cat ~/.YYZ_DOCKER_LATEST) \
	--command-line "sleep $DEVBOX_TTL_S"
echo "Launched devbox. Will now wait for it to deploy, and then start codesync."

sleep 5
while true; do
	STATUS=$("$AV/bin/ma" show --last | grep Status | head -n 1 |
		awk '{ print $2 }')
	echo "Devbox job status: [$STATUS]."
	if [[ "$STATUS" == "RUNNING" ]]; then
		break
	fi
	sleep 3
done

DELAY=60
echo "Job is running! Waiting ${DELAY}s for it to initialize, then starting codesync..."
echo "Use \"$AV/bin/ma ssh --last\" to ssh into the job node."
echo

sleep "$DELAY"
"$AV/bin/ma" codesync --last                                  \
	"$AV/source/experimental/toronto/python/experiments" -dst   \
	"/av/python/av/experimental/toronto/experiments"
