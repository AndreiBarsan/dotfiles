#!/usr/bin/env bash
# ASSembles images in a folder into a nice video.

set -eu

if [[ "$#" -lt 2 ]]; then
  echo >&2 "Usage: $0 <pattern> <output_video> [--other --flags:here]"
  echo >&2 ""
  echo >&2 "Examples: $0 imgs/foo%03d.png render.mp4"
  echo >&2 "          $0 'imgs/bar_%*.png' render.mp4 -filter:v scale=1280:-1"
  echo >&2 ""
  exit 1
fi

FRAMERATE=30
IN_FMT="$1"
OUT_FPATH="$2"
shift; shift

echo -e "\n\tFramerate: $FRAMERATE\n"

# Encode the frames into a video ensuring the pixel format is correct and that
# we do a little bit of compression. '-crf' should be between 0 and 51, with
# 0 being lossless. 23 is the default, and 51 is worst quality.
#
# If you don't add the 'yuv420p' specifiers many video players will be unable
# to load your video and Adobe Premiere Pro will shit itself hard when
# attempting to either load the videos, or output them.
#
# YUV is an alternative to RGB which is used in most videos.
ffmpeg -framerate $FRAMERATE -i "$IN_FMT" -pix_fmt yuv420p -crf 18 "$@" "$OUT_FPATH"

